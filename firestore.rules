rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /posters/{posterId} {
      allow read, write: if true;
    }
    // Posters: anyone can read published, only backend can write
   // match /posters/{posterId} {
  //    allow read: if resource.data.isPublished == true;
  //    allow write: if false; // Disallow direct client write
   // }
    
   //match /posters/{posterId} {
   //   allow read: if true;
    //  allow write: if request.auth != null && request.auth.token.admin == true;
   // }

    // Allow authenticated users to read/write their own user document
    match /users/{userId} {

      // Admin SDK for diables accounts
      admin.auth().updateUser(uid, { disabled: true });

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId && resource.data.isActive == true;
    }

      allow read, update: if request.auth != null && request.auth.uid == userId;

      // Only allow creating a user document if it doesn't already exist
      allow create: if request.auth != null && request.auth.uid == userId && !exists(/databases/$(database)/documents/users/$(userId));

      // Prevent users from changing isActive themselves
      allow update: if request.resource.data.keys().hasOnly(['name', 'email', 'phone', 'address', 'createdAt']) &&
                    request.auth != null &&
                    request.auth.uid == userId;

      // Allow admin to update isActive
      allow update: if request.auth != null &&
                    request.auth.token.admin == true;

    }

    // Home Sections (read by anyone, write by admin only)
    match /homeSections/{sectionId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }


    // Sellers: only logged-in user can read/write their own seller profile
    match /sellers/{sellerId} {
      allow read, write: if request.auth != null && request.auth.uid == sellerId;
    }

    // Customers: same, restrict to owner
    match /customers/{customerId} {
      allow read, write: if request.auth != null && request.auth.uid == customerId;
    }

    // Orders: only user who made the order can read it
    match /orders/{orderId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Admin-only collections (e.g., support, admin logs)
    match /supportTickets/{ticketId} {
      allow read, write: if request.auth != null && request.auth.token.role == "admin";
    }
  }
}
